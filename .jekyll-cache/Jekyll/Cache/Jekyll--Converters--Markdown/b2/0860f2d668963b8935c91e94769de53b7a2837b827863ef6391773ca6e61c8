I"-
<p>Color Picker: is always red at start of app. Thumb should always reflect current color.
DO NOT PASS COLORPICKER INSIDE TOGGLE MENU!
There is already an AbstractColorPickerView in the given files.</p>

<p>Color picker can be placed anywhere as long as the whole thing is inside the screen :) Also, color picker should CLOSE if user presses inside the wheel and releases anywhere</p>

<p>All visible buttons should be grayed out/not usable immediately after clicking color_fab (leave color fab enabled)
After clicking color_fab and your picker shows up, then user clicks totally outside wheel, it is ok to close the window or not close it, doesn’t matter.</p>

<p>onSomethingSelected methods</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">addCollapsableMenu</span><span class="o">(</span><span class="no">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">whatever</span><span class="o">...</span> <span class="k">this</span><span class="o">::</span><span class="n">onSomethingSelected</span><span class="o">)</span> <span class="c1">// do this in order to be able to execute code inside the onSomethingSelected method</span>

<span class="c1">// do this EVEN FOR the color_fab even tho it's no longer a "collapsable menu", most important part is "this::on[Something]Selected"</span>
</code></pre></div></div>
<p>Part 4 ideas
Clearing the whole screen, dashed/dotted lines when drawing, emoji drawn along path, fill entire canvas with color…etc. Suggestion: use the existing undo and redo classes</p>

<p>Reflection:
Be sure to group your data based on “like” issues, not based on who sent them to you.</p>
<ul>
  <li>include specific steps you would take to solve the issues you found with the default Undo app.</li>
  <li>can suggest new heuristics for the “how well do the heuristics fit”?
Others Hints
From Lecture Winter 2020:
```java
// RrvDrawActivity: Contains ALL buttons
// Rvdrawingact: Implements a class that allows you to undo the redo, allows u to commit actions, calls
// AbstractDrActvity: No history, adding menus</li>
</ul>

<p>// DrawingView: Keeps track of stroke views
	// has onTouchEvent with Pps state machine</p>

<p>// Possible to implement action: Emojis, dotted lines… THERE IS A WORKSHEET, SEE WEBSITE FOR PDF DOWNLOAD!!!
```
From Lecture Spring 2020 (5/22):
Review: all systems have at least 3 models (Design/what you thought the system should do, System Image: your implementation, User Model/How the user thinks the system works)</p>

:ET